# begin .github/workflows/build.yml

name: build

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Install uv package manager
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        version-file: "pyproject.toml"
        python-version: 3.11
        enable-cache: true

    - run: uv sync

    - name: Run tests
      run: |
        . .venv/bin/activate
        uv pip list
        python3 -u -m pytest tests/

    - name: Verify that the Docker image for the action builds
      run: docker build . --file Dockerfile

  integration-tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - model: gemini
            secret: GOOGLE_API_KEY
          - model: grok
            secret: XAI_API_KEY
          - model: claude
            secret: CLAUDE_API_KEY
          - model: nvidia_nim
            secret: NVIDIA_NIM_API_KEY
          - model: perplexity
            secret: PERPLEXITY_API_KEY
      fail-fast: false
    steps:
    - uses: actions/checkout@v5

    - name: Install uv package manager
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        version-file: "pyproject.toml"
        python-version: 3.11
        enable-cache: true

    - run: uv sync

    - name: Integration test ${{ matrix.model }}
      id: integration
      uses: ./
      with:
        report-files: tests/sample_report.json,tests/json_dict_div_zero_try_except.json
        student-files: tests/sample_code.py
        api-key: ${{ secrets[matrix.secret] }}
        readme-path: tests/sample_readme.md
        model: ${{ matrix.model }}
        explanation-in: Korean
        fail-expected: True
      timeout-minutes: 5
    - name: Output and Verify
      run: |
        echo "${{ matrix.model }} ${{ steps.integration.outputs.feedback }}"
        echo "feedback_${{ matrix.model }}=${{ steps.integration.outputs.feedback }}" >> $GITHUB_OUTPUT
    - name: Verify integration test results
      run: |
        . .venv/bin/activate
          uv pip list
        echo "feedback_${{ matrix.model }}=${{ steps.integration.outputs.feedback }}" >> $GITHUB_OUTPUT
        python3 -u -m pytest tests/integration.py

# end .github/workflows/build.yml
